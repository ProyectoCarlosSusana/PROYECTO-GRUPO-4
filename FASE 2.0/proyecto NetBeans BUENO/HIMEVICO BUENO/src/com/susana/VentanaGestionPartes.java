/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.susana;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import oracle.jdbc.OracleTypes;

/**
 *
 * @author acer
 */
public class VentanaGestionPartes extends javax.swing.JFrame {
                

    /**
     * Creates new form GestionPartes
     */
    public VentanaGestionPartes() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    Transportista tr;
    Parte pr;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        bgEstadoParte = new javax.swing.ButtonGroup();
        jButton1VerPartes = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1ListPartes = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jButton2EliminarParte = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4FiltrarPorFechas = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField1Fecha1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField2Fecha2 = new javax.swing.JTextField();
        jButton4FiltrarPorFechas1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jTextField1ParaFiltrarPorUsuario = new javax.swing.JTextField();
        jRadioButton1Todos = new javax.swing.JRadioButton();
        jRadioButton2Abiertos = new javax.swing.JRadioButton();
        jRadioButton3Cerrados = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1VerPartes.setText("Ver partes ...");
        jButton1VerPartes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1VerPartesActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1VerPartes, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jScrollPane2.setViewportView(jTextPane1ListPartes);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 828, 110));

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 500, -1, -1));

        jButton2EliminarParte.setText("Eliminar");
        jButton2EliminarParte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2EliminarParteActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2EliminarParte, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 500, -1, -1));

        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 500, -1, -1));

        jButton4FiltrarPorFechas.setText("Filtrar por usuario y  fechas");
        jButton4FiltrarPorFechas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4FiltrarPorFechasActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4FiltrarPorFechas, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 190, -1));

        jLabel6.setText("DE");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, 30, 20));
        getContentPane().add(jTextField1Fecha1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, 100, 30));

        jLabel7.setText("A");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 40, 10, 20));
        getContentPane().add(jTextField2Fecha2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 40, 100, 30));

        jButton4FiltrarPorFechas1.setText("Filtrar por fechas");
        jButton4FiltrarPorFechas1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4FiltrarPorFechas1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4FiltrarPorFechas1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLabel10.setText("USUARIO");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 60, 20));
        getContentPane().add(jTextField1ParaFiltrarPorUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 100, 30));

        bgEstadoParte.add(jRadioButton1Todos);
        jRadioButton1Todos.setSelected(true);
        jRadioButton1Todos.setText("Todos");
        getContentPane().add(jRadioButton1Todos, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, -1, -1));

        bgEstadoParte.add(jRadioButton2Abiertos);
        jRadioButton2Abiertos.setText("Abiertos");
        getContentPane().add(jRadioButton2Abiertos, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, -1, -1));

        bgEstadoParte.add(jRadioButton3Cerrados);
        jRadioButton3Cerrados.setText("Cerrados");
        jRadioButton3Cerrados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3CerradosActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioButton3Cerrados, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        jLabel1.setText("Nombre");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 410, -1, -1));

        jLabel2.setText("NUM PARTE");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 410, -1, -1));

        jTextField2.setText("jTextField2");
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 410, -1, -1));

        jLabel3.setText("HORAS TOTALES");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 410, -1, -1));

        jTextField3.setText("jTextField3");
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 410, -1, -1));

        jCheckBox1.setText("VALIDACION");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 410, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TRABAJADOR", "USUARIO", "FECHA", "ESTADO", "KM PRINCIPIO", "KM FINAL", "G. GASOIL", "G. AUTOPISTA", "G. DIETAS", "G. VARIOS", "INCIDENCIAS", "VALIDADO", "EXCESO"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 910, 150));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1VerPartesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1VerPartesActionPerformed

        if (jRadioButton1Todos.isSelected()) {
            try {
                Class.forName("java.sql.DriverManager");
                Connection conexion = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");

                Statement sentencia = conexion.createStatement();

                CallableStatement sql = conexion.prepareCall("{call LISTARPARTES(?)}");
                sql.registerOutParameter(1, OracleTypes.CURSOR);
                sql.execute();
                /*
                
                */

                ResultSet resul = (ResultSet) sql.getObject(1);
                Document otroDocumento = jTextPane1ListPartes.getStyledDocument();
                otroDocumento.remove(0, otroDocumento.getLength());
                while (resul.next()) {

                    try {
                        otroDocumento.insertString(otroDocumento.getLength(),
                              "NUM. PARTE: " + resul.getString(1) +  "   /   TRABAJADOR: " + resul.getString(12) + "   /   FECHA: " + resul.getString(4) + "   /   ESTADO: " + resul.getString(5) + "   /   KM PRINCIPIO: " + resul.getString(2) + "   /   KM FINAL: " + resul.getString(3) + "   /   GASTO GASOIL: " + resul.getString(6) + "   /   GASTO AUTOPISTA: " + resul.getString(7) + "   /   DIETAS: " + resul.getString(8) + "   /   GASTOS VARIOS: " + resul.getString(9) + "   /   INCIDENCIAS: " + resul.getString(10) + "   /   VALIDADO: " + resul.getString(11) + "   /   EXCESO: " + resul.getString(13) + "\n" + "\n", null);

                    } catch (BadLocationException ble) {
                        ble.printStackTrace();
                    }
                }
                resul.close();
                sentencia.close();
                conexion.close();
            } catch (ClassNotFoundException cn) {
                cn.printStackTrace();
            } catch (SQLException e) {
                e.printStackTrace();
            } catch (BadLocationException ex) {
                Logger.getLogger(VentanaGestionPartes.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jRadioButton2Abiertos.isSelected()) {
            try {
                Class.forName("java.sql.DriverManager");
                Connection conexion = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");

                Statement sentencia = conexion.createStatement();

                CallableStatement sql = conexion.prepareCall("{call LISTAPARTESABIERTOS(?)}");
                sql.registerOutParameter(1, OracleTypes.CURSOR);
                sql.execute();

                ResultSet resul = (ResultSet) sql.getObject(1);
                Document otroDocumento = jTextPane1ListPartes.getStyledDocument();
                otroDocumento.remove(0, otroDocumento.getLength());
                while (resul.next()) {

                    try {
                        otroDocumento.insertString(otroDocumento.getLength(),
                              "NUM. PARTE: " + resul.getString(1) +  "   /   TRABAJADOR: " + resul.getString(12) + "   /   FECHA: " + resul.getString(4) + "   /   ESTADO: " + resul.getString(5) + "   /   KM PRINCIPIO: " + resul.getString(2) + "   /   KM FINAL: " + resul.getString(3) + "   /   GASTO GASOIL: " + resul.getString(6) + "   /   GASTO AUTOPISTA: " + resul.getString(7) + "   /   DIETAS: " + resul.getString(8) + "   /   GASTOS VARIOS: " + resul.getString(9) + "   /   INCIDENCIAS: " + resul.getString(10) + "   /   VALIDADO: " + resul.getString(11) + "   /   EXCESO: " + resul.getString(13) + "\n" + "\n", null);

                    } catch (BadLocationException ble) {
                        ble.printStackTrace();
                    }
                }
                resul.close();
                sentencia.close();
                conexion.close();
            } catch (ClassNotFoundException cn) {
                cn.printStackTrace();
            } catch (SQLException e) {
                e.printStackTrace();
            } catch (BadLocationException ex) {
                Logger.getLogger(VentanaGestionPartes.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jRadioButton3Cerrados.isSelected()) {
            try {
                Class.forName("java.sql.DriverManager");
                Connection conexion = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");

                Statement sentencia = conexion.createStatement();

                CallableStatement sql = conexion.prepareCall("{call LISTAPARTESCERRADOS(?)}");
                sql.registerOutParameter(1, OracleTypes.CURSOR);
                sql.execute();

                ResultSet resul = (ResultSet) sql.getObject(1);
                Document otroDocumento = jTextPane1ListPartes.getStyledDocument();
                otroDocumento.remove(0, otroDocumento.getLength());
                while (resul.next()) {

                    try {
                        otroDocumento.insertString(otroDocumento.getLength(),
                              "NUM. PARTE: " + resul.getString(1) +  "   /   TRABAJADOR: " + resul.getString(12) + "   /   FECHA: " + resul.getString(4) + "   /   ESTADO: " + resul.getString(5) + "   /   KM PRINCIPIO: " + resul.getString(2) + "   /   KM FINAL: " + resul.getString(3) + "   /   GASTO GASOIL: " + resul.getString(6) + "   /   GASTO AUTOPISTA: " + resul.getString(7) + "   /   DIETAS: " + resul.getString(8) + "   /   GASTOS VARIOS: " + resul.getString(9) + "   /   INCIDENCIAS: " + resul.getString(10) + "   /   VALIDADO: " + resul.getString(11) + "   /   EXCESO: " + resul.getString(13) + "\n" + "\n", null);

                    } catch (BadLocationException ble) {
                        ble.printStackTrace();
                    }
                }
                resul.close();
                sentencia.close();
                conexion.close();
            } catch (ClassNotFoundException cn) {
                cn.printStackTrace();
            } catch (SQLException e) {
                e.printStackTrace();

            } catch (BadLocationException ex) {
                Logger.getLogger(VentanaGestionPartes.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
         if (jTextPane1ListPartes.getText().length() == 0) {
                        JOptionPane.showMessageDialog(this, "Parte inexistente con los datos indicados");
                    }
    }
    

    /*   try {
                Class.forName("java.sql.DriverManager");
                Connection conexion = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");

                Statement sentencia = conexion.createStatement();

                CallableStatement sql = conexion.prepareCall("{call LISTARPARTES(?)}");
                sql.registerOutParameter(1, OracleTypes.CURSOR);
                sql.execute();

                ResultSet resul = (ResultSet) sql.getObject(1);
                Document otroDocumento = jTextPane1ListPartes.getStyledDocument();
                otroDocumento.remove(0, otroDocumento.getLength());
                while (resul.next()) {

                    try {
                        otroDocumento.insertString(otroDocumento.getLength(),
                                "TRABAJADOR: " + resul.getString(11) + "   /   FECHA: " + resul.getString(3) + "   /   ESTADO: " + resul.getString(4) + "   /   KM PRINCIPIO: " + resul.getString(1) + "   /   KM FINAL: " + resul.getString(2) + "   /   GASTO GASOIL: " + resul.getString(5) + "   /   GASTO AUTOPISTA: " + resul.getString(6) + "   /   DIETAS: " + resul.getString(7) + "   /   GASTOS VARIOS: " + resul.getString(8) + "   /   INCIDENCIAS: " + resul.getString(9) + "   /   VALIDADO: " + resul.getString(10) + "   /   EXCESO: " + resul.getString(12) + "\n" + "\n", null);

                    } catch (BadLocationException ble) {
                        ble.printStackTrace();
                    }
                }
                resul.close();
                sentencia.close();
                conexion.close();
            } catch (ClassNotFoundException cn) {
                cn.printStackTrace();
            } catch (SQLException e) {
                e.printStackTrace();
            } catch (BadLocationException ex) {
                Logger.getLogger(VentanaGestionPartes.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jRadioButton2Abiertos.isSelected()) {
            try {
                Class.forName("java.sql.DriverManager");
                Connection conexion = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");

                Statement sentencia = conexion.createStatement();

                CallableStatement sql = conexion.prepareCall("{call LISTAPARTESABIERTOS(?)}");
                sql.registerOutParameter(1, OracleTypes.CURSOR);
                sql.execute();

                ResultSet resul = (ResultSet) sql.getObject(1);
                Document otroDocumento = jTextPane1ListPartes.getStyledDocument();
                otroDocumento.remove(0, otroDocumento.getLength());
                while (resul.next()) {

                    try {
                        otroDocumento.insertString(otroDocumento.getLength(),
                                "TRABAJADOR: " + resul.getString(11) + "   /   FECHA: " + resul.getString(3) + "   /   ESTADO: " + resul.getString(4) + "   /   KM PRINCIPIO: " + resul.getString(1) + "   /   KM FINAL: " + resul.getString(2) + "   /   GASTO GASOIL: " + resul.getString(5) + "   /   GASTO AUTOPISTA: " + resul.getString(6) + "   /   DIETAS: " + resul.getString(7) + "   /   GASTOS VARIOS: " + resul.getString(8) + "   /   INCIDENCIAS: " + resul.getString(9) + "   /   VALIDADO: " + resul.getString(10) + "   /   EXCESO: " + resul.getString(12) + "\n" + "\n", null);

                    } catch (BadLocationException ble) {
                        ble.printStackTrace();
                    }
                }
                resul.close();
                sentencia.close();
                conexion.close();
            } catch (ClassNotFoundException cn) {
                cn.printStackTrace();
            } catch (SQLException e) {
                e.printStackTrace();
            } catch (BadLocationException ex) {
                Logger.getLogger(VentanaGestionPartes.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jRadioButton3Cerrados.isSelected()) {
            try {
                Class.forName("java.sql.DriverManager");
                Connection conexion = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");

                Statement sentencia = conexion.createStatement();

                CallableStatement sql = conexion.prepareCall("{call LISTAPARTESCERRADOS(?)}");
                sql.registerOutParameter(1, OracleTypes.CURSOR);
                sql.execute();

                ResultSet resul = (ResultSet) sql.getObject(1);
                Document otroDocumento = jTextPane1ListPartes.getStyledDocument();
                otroDocumento.remove(0, otroDocumento.getLength());
                while (resul.next()) {

                    try {
                        otroDocumento.insertString(otroDocumento.getLength(),
                                "TRABAJADOR: " + resul.getString(11) + "   /   FECHA: " + resul.getString(3) + "   /   ESTADO: " + resul.getString(4) + "   /   KM PRINCIPIO: " + resul.getString(1) + "   /   KM FINAL: " + resul.getString(2) + "   /   GASTO GASOIL: " + resul.getString(5) + "   /   GASTO AUTOPISTA: " + resul.getString(6) + "   /   DIETAS: " + resul.getString(7) + "   /   GASTOS VARIOS: " + resul.getString(8) + "   /   INCIDENCIAS: " + resul.getString(9) + "   /   VALIDADO: " + resul.getString(10) + "   /   EXCESO: " + resul.getString(12) + "\n" + "\n", null);

                    } catch (BadLocationException ble) {
                        ble.printStackTrace();
                    }
                }
                resul.close();
                sentencia.close();
                conexion.close();
            } catch (ClassNotFoundException cn) {
                cn.printStackTrace();
            } catch (SQLException e) {
                e.printStackTrace();
            
            } catch (BadLocationException ex) {
                Logger.getLogger(VentanaGestionPartes.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_jButton1VerPartesActionPerformed
*/
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2EliminarParteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2EliminarParteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2EliminarParteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        VentanaAdministrador va = new VentanaAdministrador();
        va.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4FiltrarPorFechasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4FiltrarPorFechasActionPerformed
        if (jRadioButton1Todos.isSelected()) {
            try {
                Class.forName("java.sql.DriverManager");
                Connection conexion = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");

                Statement sentencia = conexion.createStatement();
                String usu = jTextField1ParaFiltrarPorUsuario.getText();
                String fecha1 = jTextField1Fecha1.getText();
                String fecha2 = jTextField2Fecha2.getText();

                CallableStatement sql = conexion.prepareCall("{call LISPARTESPORTRABAJADORYRANGO(?, ?, ?,  ?)}");
                sql.registerOutParameter(4, OracleTypes.CURSOR);
                sql.setString(1, usu);
                sql.setString(2, fecha1);
                sql.setString(3, fecha2);
                sql.execute();

                ResultSet resul = (ResultSet) sql.getObject(4);

                Document otroDocumento = jTextPane1ListPartes.getStyledDocument();
                otroDocumento.remove(0, otroDocumento.getLength());
                while (resul.next()) {
                    try {
                        pr = new Parte();
                        /*este objeton perte es por si acaso lo necesito en el futuro*/
                        pr.setUsuario(resul.getString(1));
                        pr.setFecha(resul.getDate(2));
                        pr.setEstado(resul.getString(3));
                        pr.setKmPrincipio(Double.parseDouble(resul.getString(4)));
                        pr.setKmFinal(Double.parseDouble(resul.getString(5)));
                        pr.setGastoGasoil(Double.parseDouble(resul.getString(6)));
                        pr.setGastoAutopista(Double.parseDouble(resul.getString(7)));
                        pr.setGastoDietas(Double.parseDouble(resul.getString(8)));
                        pr.setGastosVarios(Double.parseDouble(resul.getString(9)));
                        pr.setIncidencias(resul.getString(10));
                        pr.setValidar(resul.getString(11));
                        pr.setExceso(Double.parseDouble(resul.getString(12)));
                        /*
                    TRABAJADOR_USUARIO, FECHA, ESTADO,  KM_PRINCIPIO, KM_FINAL, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO,  EXCESO
                         */
                        otroDocumento.insertString(otroDocumento.getLength(),
                                "TRABAJADOR_USUARIO: " + pr.getUsuario() + "\n" + "FECHA: " + pr.getFecha() + "\n" + "ESTADO: " + pr.getEstado() + "\n" + "KM PRINCIPIO: " + pr.getKmPrincipio()
                                + "\n" + "KM FINAL: " + pr.getKmFinal()
                                + "G. GASOIL: " + pr.getGastoGasoil() + "\n" + "g. AUTOPISTA: " + pr.getGastoAutopista()
                                + "DIETAS: " + pr.getGastoDietas() + "\n" + "G. VARIOS: " + pr.getGastosVarios() + "\n"
                                + "INCIDENCIAS: " + pr.getIncidencias() + "\n"
                                + "VALIDADO: " + pr.getValidar() + "\n"
                                + "EXCESO: " + pr.getExceso(), null);

                    } catch (BadLocationException ble) {
                        ble.printStackTrace();

                    }

                }

                resul.close();
                sentencia.close();
                conexion.close();

            } catch (ClassNotFoundException cn) {
                cn.printStackTrace();

            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e.getMessage());

            } catch (BadLocationException ex) {
                Logger.getLogger(VentanaGestionPartes.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jRadioButton2Abiertos.isSelected()) {
            try {
                Class.forName("java.sql.DriverManager");
                Connection conexion = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");

                Statement sentencia = conexion.createStatement();
                String usu = jTextField1ParaFiltrarPorUsuario.getText();
                String fecha1 = jTextField1Fecha1.getText();
                String fecha2 = jTextField2Fecha2.getText();

                CallableStatement sql = conexion.prepareCall("{call LISPARTESTRABAJADORYRANGOABI(?, ?, ?,  ?)}");
                sql.registerOutParameter(4, OracleTypes.CURSOR);
                sql.setString(1, usu);
                sql.setString(2, fecha1);
                sql.setString(3, fecha2);
                sql.execute();

                ResultSet resul = (ResultSet) sql.getObject(4);

                Document otroDocumento = jTextPane1ListPartes.getStyledDocument();
                otroDocumento.remove(0, otroDocumento.getLength());
                while (resul.next()) {
                    try {
                        pr = new Parte();
                        /*este objeton perte es por si acaso lo necesito en el futuro*/
                        pr.setUsuario(resul.getString(1));
                        pr.setFecha(resul.getDate(2));
                        pr.setEstado(resul.getString(3));
                        pr.setKmPrincipio(Double.parseDouble(resul.getString(4)));
                        pr.setKmFinal(Double.parseDouble(resul.getString(5)));
                        pr.setGastoGasoil(Double.parseDouble(resul.getString(6)));
                        pr.setGastoAutopista(Double.parseDouble(resul.getString(7)));
                        pr.setGastoDietas(Double.parseDouble(resul.getString(8)));
                        pr.setGastosVarios(Double.parseDouble(resul.getString(9)));
                        pr.setIncidencias(resul.getString(10));
                        pr.setValidar(resul.getString(11));
                        pr.setExceso(Double.parseDouble(resul.getString(12)));
                        /*
                    TRABAJADOR_USUARIO, FECHA, ESTADO,  KM_PRINCIPIO, KM_FINAL, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO,  EXCESO
                         */
                        otroDocumento.insertString(otroDocumento.getLength(),
                                "TRABAJADOR_USUARIO: " + pr.getUsuario() + "\n" + "FECHA: " + pr.getFecha() + "\n" + "ESTADO: " + pr.getEstado() + "\n" + "KM PRINCIPIO: " + pr.getKmPrincipio()
                                + "\n" + "KM FINAL: " + pr.getKmFinal()
                                + "G. GASOIL: " + pr.getGastoGasoil() + "\n" + "g. AUTOPISTA: " + pr.getGastoAutopista()
                                + "DIETAS: " + pr.getGastoDietas() + "\n" + "G. VARIOS: " + pr.getGastosVarios() + "\n"
                                + "INCIDENCIAS: " + pr.getIncidencias() + "\n"
                                + "VALIDADO: " + pr.getValidar() + "\n"
                                + "EXCESO: " + pr.getExceso(), null);

                    } catch (BadLocationException ble) {
                        ble.printStackTrace();

                    }

                }

                resul.close();
                sentencia.close();
                conexion.close();

            } catch (ClassNotFoundException cn) {
                cn.printStackTrace();

            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e.getMessage());

            } catch (BadLocationException ex) {
                Logger.getLogger(VentanaGestionPartes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (jRadioButton3Cerrados.isSelected()) {
            try {
                Class.forName("java.sql.DriverManager");
                Connection conexion = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");

                Statement sentencia = conexion.createStatement();
                String usu = jTextField1ParaFiltrarPorUsuario.getText();
                String fecha1 = jTextField1Fecha1.getText();
                String fecha2 = jTextField2Fecha2.getText();

                CallableStatement sql = conexion.prepareCall("{call LISPARTESTRABAJADORYRANGOCER(?, ?, ?,  ?)}");
                sql.registerOutParameter(4, OracleTypes.CURSOR);
                sql.setString(1, usu);
                sql.setString(2, fecha1);
                sql.setString(3, fecha2);
                sql.execute();

                ResultSet resul = (ResultSet) sql.getObject(4);

                Document otroDocumento = jTextPane1ListPartes.getStyledDocument();
                otroDocumento.remove(0, otroDocumento.getLength());
                while (resul.next()) {
                    try {
                        pr = new Parte();
                        /*por si lo necesito*/
                        pr.setUsuario(resul.getString(1));
                        pr.setFecha(resul.getDate(2));
                        pr.setEstado(resul.getString(3));
                        pr.setKmPrincipio(Double.parseDouble(resul.getString(4)));
                        pr.setKmFinal(Double.parseDouble(resul.getString(5)));
                        pr.setGastoGasoil(Double.parseDouble(resul.getString(6)));
                        pr.setGastoAutopista(Double.parseDouble(resul.getString(7)));
                        pr.setGastoDietas(Double.parseDouble(resul.getString(8)));
                        pr.setGastosVarios(Double.parseDouble(resul.getString(9)));
                        pr.setIncidencias(resul.getString(10));
                        pr.setValidar(resul.getString(11));
                        pr.setExceso(Double.parseDouble(resul.getString(12)));
                        /*
                    TRABAJADOR_USUARIO, FECHA, ESTADO,  KM_PRINCIPIO, KM_FINAL, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO,  EXCESO
                         */
                        otroDocumento.insertString(otroDocumento.getLength(),
                                "TRABAJADOR_USUARIO: " + pr.getUsuario() + "\n" + "FECHA: " + pr.getFecha() + "\n" + "ESTADO: " + pr.getEstado() + "\n" + "KM PRINCIPIO: " + pr.getKmPrincipio()
                                + "\n" + "KM FINAL: " + pr.getKmFinal()
                                + "G. GASOIL: " + pr.getGastoGasoil() + "\n" + "g. AUTOPISTA: " + pr.getGastoAutopista()
                                + "DIETAS: " + pr.getGastoDietas() + "\n" + "G. VARIOS: " + pr.getGastosVarios() + "\n"
                                + "INCIDENCIAS: " + pr.getIncidencias() + "\n"
                                + "VALIDADO: " + pr.getValidar() + "\n"
                                + "EXCESO: " + pr.getExceso(), null);

                    } catch (BadLocationException ble) {
                        ble.printStackTrace();

                    }

                }

                resul.close();
                sentencia.close();
                conexion.close();

            } catch (ClassNotFoundException cn) {
                cn.printStackTrace();

            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e.getMessage());

            } catch (BadLocationException ex) {
                Logger.getLogger(VentanaGestionPartes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
                            if (jTextPane1ListPartes.getText().length() == 0) {
                        JOptionPane.showMessageDialog(this, "Parte inexistente con los datos indicados");
                    }


    }//GEN-LAST:event_jButton4FiltrarPorFechasActionPerformed

    private void jButton4FiltrarPorFechas1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4FiltrarPorFechas1ActionPerformed
        if (jRadioButton1Todos.isSelected()) {
            try {
                Class.forName("java.sql.DriverManager");
                Connection conexion = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");

                Statement sentencia = conexion.createStatement();
                String usu = jTextField1ParaFiltrarPorUsuario.getText();
                String fecha1 = jTextField1Fecha1.getText();
                String fecha2 = jTextField2Fecha2.getText();

                CallableStatement sql = conexion.prepareCall("{call LISPARTESPORRANGO(?, ?, ?)}");
                sql.registerOutParameter(3, OracleTypes.CURSOR);
                sql.setString(1, fecha1);
                sql.setString(2, fecha2);

                sql.execute();

                ResultSet resul = (ResultSet) sql.getObject(3);

                Document otroDocumento = jTextPane1ListPartes.getStyledDocument();
                otroDocumento.remove(0, otroDocumento.getLength());
                while (resul.next()) {
                    try {
                        pr = new Parte();
                        /*este objeton perte es por si acaso lo necesito en el futuro*/
                        pr.setUsuario(resul.getString(1));
                        pr.setFecha(resul.getDate(2));
                        pr.setEstado(resul.getString(3));
                        pr.setKmPrincipio(Double.parseDouble(resul.getString(4)));
                        pr.setKmFinal(Double.parseDouble(resul.getString(5)));
                        pr.setGastoGasoil(Double.parseDouble(resul.getString(6)));
                        pr.setGastoAutopista(Double.parseDouble(resul.getString(7)));
                        pr.setGastoDietas(Double.parseDouble(resul.getString(8)));
                        pr.setGastosVarios(Double.parseDouble(resul.getString(9)));
                        pr.setIncidencias(resul.getString(10));
                        pr.setValidar(resul.getString(11));
                        pr.setExceso(Double.parseDouble(resul.getString(12)));
                        /*
                    TRABAJADOR_USUARIO, FECHA, ESTADO,  KM_PRINCIPIO, KM_FINAL, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO,  EXCESO
                         */
                        otroDocumento.insertString(otroDocumento.getLength(),
                                "TRABAJADOR_USUARIO: " + pr.getUsuario() + "\n" + "FECHA: " + pr.getFecha() + "\n" + "ESTADO: " + pr.getEstado() + "\n" + "KM PRINCIPIO: " + pr.getKmPrincipio()
                                + "\n" + "KM FINAL: " + pr.getKmFinal()
                                + "G. GASOIL: " + pr.getGastoGasoil() + "\n" + "g. AUTOPISTA: " + pr.getGastoAutopista()
                                + "DIETAS: " + pr.getGastoDietas() + "\n" + "G. VARIOS: " + pr.getGastosVarios() + "\n"
                                + "INCIDENCIAS: " + pr.getIncidencias() + "\n"
                                + "VALIDADO: " + pr.getValidar() + "\n"
                                + "EXCESO: " + pr.getExceso(), null);

                    } catch (BadLocationException ble) {
                        ble.printStackTrace();

                    }

                }

                resul.close();
                sentencia.close();
                conexion.close();

            } catch (ClassNotFoundException cn) {
                cn.printStackTrace();

            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e.getMessage());

            } catch (BadLocationException ex) {
                Logger.getLogger(VentanaGestionPartes.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jRadioButton2Abiertos.isSelected()) {
            try {
                Class.forName("java.sql.DriverManager");
                Connection conexion = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");

                Statement sentencia = conexion.createStatement();
                String usu = jTextField1ParaFiltrarPorUsuario.getText();
                String fecha1 = jTextField1Fecha1.getText();
                String fecha2 = jTextField2Fecha2.getText();

                CallableStatement sql = conexion.prepareCall("{call LISPARTESPORRANGOABIERTOS(?, ?, ?)}");
                sql.registerOutParameter(3, OracleTypes.CURSOR);
                sql.setString(1, fecha1);
                sql.setString(2, fecha2);

                sql.execute();

                ResultSet resul = (ResultSet) sql.getObject(3);

                Document otroDocumento = jTextPane1ListPartes.getStyledDocument();
                otroDocumento.remove(0, otroDocumento.getLength());
                while (resul.next()) {
                    try {
                        pr = new Parte();
                        /*este objeton perte es por si acaso lo necesito en el futuro*/
                        pr.setUsuario(resul.getString(1));
                        pr.setFecha(resul.getDate(2));
                        pr.setEstado(resul.getString(3));
                        pr.setKmPrincipio(Double.parseDouble(resul.getString(4)));
                        pr.setKmFinal(Double.parseDouble(resul.getString(5)));
                        pr.setGastoGasoil(Double.parseDouble(resul.getString(6)));
                        pr.setGastoAutopista(Double.parseDouble(resul.getString(7)));
                        pr.setGastoDietas(Double.parseDouble(resul.getString(8)));
                        pr.setGastosVarios(Double.parseDouble(resul.getString(9)));
                        pr.setIncidencias(resul.getString(10));
                        pr.setValidar(resul.getString(11));
                        pr.setExceso(Double.parseDouble(resul.getString(12)));
                        /*
                    TRABAJADOR_USUARIO, FECHA, ESTADO,  KM_PRINCIPIO, KM_FINAL, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO,  EXCESO
                         */
                        otroDocumento.insertString(otroDocumento.getLength(),
                                "TRABAJADOR_USUARIO: " + pr.getUsuario() + "\n" + "FECHA: " + pr.getFecha() + "\n" + "ESTADO: " + pr.getEstado() + "\n" + "KM PRINCIPIO: " + pr.getKmPrincipio()
                                + "\n" + "KM FINAL: " + pr.getKmFinal()
                                + "G. GASOIL: " + pr.getGastoGasoil() + "\n" + "g. AUTOPISTA: " + pr.getGastoAutopista()
                                + "DIETAS: " + pr.getGastoDietas() + "\n" + "G. VARIOS: " + pr.getGastosVarios() + "\n"
                                + "INCIDENCIAS: " + pr.getIncidencias() + "\n"
                                + "VALIDADO: " + pr.getValidar() + "\n"
                                + "EXCESO: " + pr.getExceso(), null);

                    } catch (BadLocationException ble) {
                        ble.printStackTrace();

                    }

                }

                resul.close();
                sentencia.close();
                conexion.close();

            } catch (ClassNotFoundException cn) {
                cn.printStackTrace();

            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e.getMessage());

            } catch (BadLocationException ex) {
                Logger.getLogger(VentanaGestionPartes.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jRadioButton3Cerrados.isSelected()) {
            try {
                Class.forName("java.sql.DriverManager");
                Connection conexion = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");

                Statement sentencia = conexion.createStatement();
                String usu = jTextField1ParaFiltrarPorUsuario.getText();
                String fecha1 = jTextField1Fecha1.getText();
                String fecha2 = jTextField2Fecha2.getText();

                CallableStatement sql = conexion.prepareCall("{call LISPARTESPORRANGOCERRADOS(?, ?, ?)}");
                sql.registerOutParameter(3, OracleTypes.CURSOR);
                sql.setString(1, fecha1);
                sql.setString(2, fecha2);

                sql.execute();

                ResultSet resul = (ResultSet) sql.getObject(3);

                Document otroDocumento = jTextPane1ListPartes.getStyledDocument();
                otroDocumento.remove(0, otroDocumento.getLength());
                while (resul.next()) {
                    try {
                        pr = new Parte();
                        /*este objeton perte es por si acaso lo necesito en el futuro*/
                        pr.setUsuario(resul.getString(1));
                        pr.setFecha(resul.getDate(2));
                        pr.setEstado(resul.getString(3));
                        pr.setKmPrincipio(Double.parseDouble(resul.getString(4)));
                        pr.setKmFinal(Double.parseDouble(resul.getString(5)));
                        pr.setGastoGasoil(Double.parseDouble(resul.getString(6)));
                        pr.setGastoAutopista(Double.parseDouble(resul.getString(7)));
                        pr.setGastoDietas(Double.parseDouble(resul.getString(8)));
                        pr.setGastosVarios(Double.parseDouble(resul.getString(9)));
                        pr.setIncidencias(resul.getString(10));
                        pr.setValidar(resul.getString(11));
                        pr.setExceso(Double.parseDouble(resul.getString(12)));
                        /*
                    TRABAJADOR_USUARIO, FECHA, ESTADO,  KM_PRINCIPIO, KM_FINAL, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO,  EXCESO
                         */
                        otroDocumento.insertString(otroDocumento.getLength(),
                                "TRABAJADOR_USUARIO: " + pr.getUsuario() + "\n" + "FECHA: " + pr.getFecha() + "\n" + "ESTADO: " + pr.getEstado() + "\n" + "KM PRINCIPIO: " + pr.getKmPrincipio()
                                + "\n" + "KM FINAL: " + pr.getKmFinal()
                                + "G. GASOIL: " + pr.getGastoGasoil() + "\n" + "g. AUTOPISTA: " + pr.getGastoAutopista()
                                + "DIETAS: " + pr.getGastoDietas() + "\n" + "G. VARIOS: " + pr.getGastosVarios() + "\n"
                                + "INCIDENCIAS: " + pr.getIncidencias() + "\n"
                                + "VALIDADO: " + pr.getValidar() + "\n"
                                + "EXCESO: " + pr.getExceso(), null);

                    } catch (BadLocationException ble) {
                        ble.printStackTrace();

                    }

                }

                resul.close();
                sentencia.close();
                conexion.close();

            } catch (ClassNotFoundException cn) {
                cn.printStackTrace();

            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e.getMessage());

            } catch (BadLocationException ex) {
                Logger.getLogger(VentanaGestionPartes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
                 if (jTextPane1ListPartes.getText().length() == 0) {
                        JOptionPane.showMessageDialog(this, "Parte inexistente con los datos indicados");
                    }

    }//GEN-LAST:event_jButton4FiltrarPorFechas1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
   //     SI HOPRAS TOTALES > 8
        JOptionPane.showMessageDialog(this, "");

    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jRadioButton3CerradosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3CerradosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3CerradosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaGestionPartes.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaGestionPartes.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaGestionPartes.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaGestionPartes.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaGestionPartes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgEstadoParte;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton1VerPartes;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton2EliminarParte;
    private javax.swing.JButton jButton4FiltrarPorFechas;
    private javax.swing.JButton jButton4FiltrarPorFechas1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JRadioButton jRadioButton1Todos;
    private javax.swing.JRadioButton jRadioButton2Abiertos;
    private javax.swing.JRadioButton jRadioButton3Cerrados;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField1Fecha1;
    private javax.swing.JTextField jTextField1ParaFiltrarPorUsuario;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField2Fecha2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextPane jTextPane1ListPartes;
    // End of variables declaration//GEN-END:variables
}
